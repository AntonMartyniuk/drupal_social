.container {
  margin: 0 auto;

  .styleguide & {
    width: 90%;
  }

  @include MQ($small) {
    width: 90%;
  }

  @include MQ($large) {
    max-width: $medium;
  }

}

.main-content .container {
  padding-left: 12px;
  padding-right: 12px;

  @include MQ($small) {
    padding-left: 0;
    padding-right: 0;
  }

}

.valign-wrapper {
  display: flex;
  align-items: center;

  .valign {
    display: block;
  }
}

.section {
  padding-top: 1rem;
  padding-bottom: 1rem;

  &.no-pad {
    padding: 0;
  }
  &.no-pad-bot {
    padding-bottom: 0;
  }
  &.no-pad-top {
    padding-top: 0;
  }
}

.container .row {
  margin-left: -$gutter-width / 2;
  margin-right: -$gutter-width / 2;
}

.row {
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 24px;
  position: relative;
  @lost gutter 0;

  // Clear floating children
  &:after {
    content: "";
    display: table;
    clear: both;
  }

}

.row .col {
  float: left;
  padding: 0 $gutter-width / 2;
  margin-left: auto;
  margin-right: auto;

  &[class*="push-"],
  &[class*="pull-"] {
    position: relative;
  }

  $i: 1;
  @while $i <= $num-cols {
    &.s#{$i} {
      lost-column: $i/$num-cols;
    }
    $i: $i + 1;
  }

  $i: 1;
  @while $i <= $num-cols {
    &.offset-s#{$i} {
      lost-offset: $i/$num-cols;
    }
    &.pull-s#{$i} {
      lost-move: -$i/$num-cols;
    }
    &.push-s#{$i} {
      lost-move: $i/$num-cols;
    }
    $i: $i + 1;
  }

  @include MQ($small) {

    $i: 1;
    @while $i <= $num-cols {
      &.m#{$i} {
        lost-column: $i/$num-cols;
      }
      $i: $i + 1
    }

    $i: 1;
    @while $i <= $num-cols {
      &.offset-m#{$i} {
        lost-offset: $i/$num-cols;
      }
      &.pull-m#{$i} {
        lost-move: -$i/$num-cols;
      }
      &.push-m#{$i} {
        lost-move: $i/$num-cols;
      }
      $i: $i + 1;
    }

  }

  @include MQ($medium) {

    $i: 1;
    @while $i <= $num-cols {
      &.l#{$i} {
        lost-column: $i/$num-cols;
      }
      $i: $i + 1;
    }

    $i: 1;
    @while $i <= $num-cols {
      &.offset-l#{$i} {
        lost-offset: $i/$num-cols;
      }
      &.pull-l#{$i} {
        lost-move: -$i/$num-cols;
      }
      &.push-l#{$i} {
        lost-move: $i/$num-cols;
      }
      $i: $i + 1;
    }

  }
}
